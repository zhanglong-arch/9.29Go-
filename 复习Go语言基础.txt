#### 复习Go语言基础：

**1、编程语言：**本质上是一种工具。这种工具用于编写代码，编写程序，设计软件等。编程语言有很多种，比如：C语言、Go语言、Java语言、Python语言。。。

鸿蒙：Ability Page

Android ：Activity 代表一个与用户交互的，用户可操作的界面。



Go语言：①Google ② Go语言的特性

**2、Go语言环境安装：**

​        ① 下载Go语言安装包、傻瓜式安装。

​        ② 配置环境变量：

​                  GOROOT ：该变量的值是Go语言软件的安装目录，一般通常为C: Go

​                  GOPATH  ：用户新建的一个目录，并将该目录设定为GOPATH的属性值，用于存放go语言程序或者是其他第三方的程序。

​                   PATH ：操作系统级别的环境变量。用于启动某个应用程序时，系统可以自动扫描并识别执行。

注意：只要安装好go语言环境，并配置好环境变量，就可以编写和执行Go语言程序了。比如可以使用记事本开发go语言程序，可以在cmd中使用命令进行程序的编译和执行。

**3、Goland ：**Go语言开发工具，是用于提高Go语言程序的开发效率的工具。

**4、Go语言程序的结构：**

package    包名



import    使用的包名



func    函数名称 （参数1，参数2，参数3. . .） （返回值类型1，返回值类型2，返回值类型3） {

​                 //函数体    实现代码逻辑

​                 return    返回值数据1，返回值数据2，返回值数据3

}

特别：Go语言程序的入口是main函数，     特别要求：main函数所在的软件包的包名必须是main

**5、Go语言的编码规范：**

​			代码缩进：TAB、空格

​			代码格式化：ctrl	+	alt	+	L

​			复制当前行代码：ctrl	+	D

​			更多的快捷键：百度、教材、File → setting → Keymap → Editor	Actions

**6、Go语言的基本语法：**

​	变量：本质是一种代称，可以根据需求指定具体所代表的内容

​			①	var	变量名	数据类型

​			②	变量名	:=	数据值

​			③	变量名1，变量名2，变量名3	:=	数值1，数值2，数值3

​	数据类型：不同类型的数据，对数据进行分类。

​	Go语言的基本数据类型：

​			string：字符串，以双引号包裹，比如 "hello	world"

​			int：数值类型中的整形，既可以表示负数，也可以表示整数，比如1，2。int8、int16、int32、int64等，表示的数据的范围不同

​					int表示的范围：[-128，127]

​			unint：数值类型中的整形，无符号整形，所表示的数据全是正整数，unint8、unint16、unint32。。。

​					unint8表示的范围：[0，255]

​			float：浮点数，带小数点。float32和float64，区别是范围不同

​			bool：布尔类型，取值用两种：true、false

格式化打印：通过程序向控制台输出信息，称为打印。

控制台：CMD、浏览器开发者工具console、goland调试区等均属于控制台。

​			输出：需要用到fmt包，使用import进行导入

​					fmt.Print ()：输出内容，没用换行。可以使用\n进行换行，\n称之为转义字符。

​					fmt.Println ()：输出内容，并输出一个换行

​					fmt.Printf (格式，数据内容)：

​								%s：字符串

​								%d：整数

​								%x：hex十六进制。

​								%p：变量的地址：pointer

数据类型的转换：

​			整数转字符串：strconv . Itoa，返回值类型为string

​			字符串转整数：strconv . Atoi，返回值类型是int和error

常量：数据内容永远不会变化的称之为常量

声明方式：const 常量名	=	数据内容值

规范：常量名一般使用全部大写的方式进行声明

特殊的常量：iota

**7、Go语言的运算符：**

​		①  算数运算符：数学运算符，加减乘数，自增自减。

​		②  逻辑运算符：&、|、！

​		③  位运算符：<<、>>

​		④  关系运算符：>，<，>=，<=，==，!=

​		⑤  赋值运算符： =， +=， -=，*=，/=，%=

**8、流程语句：**

​	条件语句：if	条件表达式1{

​						}  else{

​						};	

​						if	条件表达式1{

​						}  else	if	表达式2{

​						}else	等

​						switch . . . .  case

​	循环：

​			for循环：

​					for	表达式1；表达式2；表达式3	{

​								//循环体程序

​					}

​					表达式1：表示循环的起始条件；

​					表达式2：条件表达式，当满足条件时，会执行循环体

​					表达式3：每次执行循环体，条件会发生的变化操作

​					变量的作用域：局部变量、全局变量

​			for	. . .	range：变量某个集合或者map等

​					 for	index，value  :=	range  array  {

​								//循环体

​					}

​			终止循环体的执行：

​					①	break：结束当前层程序，层指的是离break最近的两个{}

​					②	continue：往往在for循环中使用，用于终止当前循环，继续进行下一次循环的执行

​					③	goto：跳转到程序指定行执行。

**9、Go语言的函数和指针**

**函数：**是可以完成某种特定功能的代码块，可以被多次调用执行。与方法不同，不需要接收值类型。

函数的声明格式：关键字func表示函数

func	函数名（参数列表）（返回值类型列表）{

​				return	返回值列表

}

函数的使用：

​			①	函数的声明和定义

​			②	在其他需要的地方调用

参数的类型：

​			①	形式参数：函数在声明的时候，定义的用于接收的参数，称之为形式参数。该参数没用实际含义，只是一个代称。

​			②	实际参数：在调用函数的时候，给该函数传递的参数，其中包含具体的数据内容，此时传递的参数称之为实际参数，简称为实参。

**指针：**

概念：用于存储某个变量的地址值的类型，称之为指针。

符号：*

指针的类型：*int、 *string、 *float32、 *bool

指针数组：本质是数组，数组中的每一个元素是一个指针类型

数组指针：本质是指针，指针的类型是数组

格式化打印时%p可以表示输出一个变量的指针地址

&：取地址，地址格式：0xa90000380

*：去对应内存地址中的数据值，	*a  =  value

new：内置函数，用于实例化指针对象

**参数的传递类型：**

​		①  值类型：值类型在进行函数调用，当做参数进行传递时，会将参数的内容拷贝（复制）一份，在调用的函数中，对数据的修改不会影响原来的数据

​		 ②  引用类型：在进行函数调用时，当做参数进行传递时，不会发生数据的拷贝，传递的参数的对应的内存地址，在函数中如果对数据进行了修改，那么会影响原来的数据。地址传递时，修改的永远是同一块数据。

  锁：通信安全。特点：可以保证数据的安全，但是程序的执行效率会降低。

锁的类型：用于解决并发协程下的数据混乱的问题。

​			①  读写锁：RWMutex。RLock、RUnLock

​			②  互斥锁：Mutex。Lock和UnLock

程序包：sync，synchronize同步的。

  **学习过的Go语言的内置函数：**

​			new：初始化一个指针对象

​			make：初始化一个切片/map

​			cap：返回一个容器的容量

​			len：返回一个容器的元素的长度

​			append：给某个容器追加一个元素（数据）

​			panic：程序进入到恐慌

​			close：io操作时，最后执行关闭动作

​			copy：拷贝数据到目标容器，该内置函数返回拷贝的长度

  学习过的Go语言包/标准库：

​			fmt：标准输入输出

​					fmt . scan（&a）

​			io：输入输出操作

​			sql：数据库操作相关

​			http：http协议，网络请求相关

​			sync：同步包

​			strings：字符串操作

​			math：数学算数包

​			errors：错误包

​			time：时间报，日期包。		2006年1月2日	15点04分05秒（报错）

​			encoding/json：json解析

​			encoding/hex：十六进制

​			strconv：数据类型转换

​			hash：哈希计算。MD，SHA系列

​			regexp：正则表达式

​			os：操作系统的包

​			ioutil：io流读取

**10、数据容器：存放数据的结构称之为容器**

​			①  数组：存放相同类型的长度固定的一组数据的结构，称之为数组。在内存中，数组的分配是连续的。

​						使用方法：[size]  int

​			②  切片：存放相同类型的长度不固定可变的机构，称之为切片。使用场景更多

​						使用方法：[]  int

​			③  Map：地图，映射。用于描述一组数据之间的映射关系，以key为键，以value为值。根据key可以获取对应的映射到的值value，其中key是唯一的，不能重复。这种数据结构称之为map。

​						使用方法：

​									map1   :=	make（map [string] int）

​			**④  结构体：**用于描述封装的对象，其中可以包含若干字段，泳衣描述对象的属性。另外，还可以用结构体的方法，用以描述对象的行为。

​					面向对象：讲某个独立的个体看做一个整体对象，并用编程的方式描述该个体。描述个体时：一类是个体本身的属性，另外一类的个体所具备的行为。

​					面向过程：关注的功能实现的具体过程，根据逻辑顺序的先后进行代码编写。

**11、接口**

